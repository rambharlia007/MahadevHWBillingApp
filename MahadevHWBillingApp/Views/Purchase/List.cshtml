
@{
    ViewBag.Title = "List";
}

<style>
    .pointer {
        cursor: pointer;
    }

    .hide {
        display: none;
    }

    [v-cloak] {
        display: none;
    }
    .modal-form-header {
        padding-top: 10px;
        padding-bottom: 10px;
        background-color: rgb(238, 238, 238);
        margin-bottom: 10px;
    }
    .text-center {
        text-align: center
    }
    .table-head, .table-body .table-row {
        display: table;
        width: 100%;
        table-layout: fixed;
    }
    .jq-dte-day{
        width:30px !important;
    }
    .jq-dte-month {
        width: 30px !important;
    }
    .jq-dte-year {
        width: 35px !important;
    }
    .jq-dte {
        width: 125px;
    }
    @@media only screen and (min-width: 768px) {
        .table-body {
            display: block;
            height: 250PX;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 992px) {
        .table-body {
            display: block;
            height: 200px;
            overflow-y: scroll;
        }
    }

    @@media only screen and (min-width: 1500px) {
        .table-body {
            display: block;
            max-height: 500px;
            overflow-y: scroll;
        }
    }
</style>

<div id="app">
    <div class="row" style="background-color: #f6f7f8 !important;">
        <div class="col-md-8">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb" style="padding-bottom: 0px; margin-bottom: 0px; background-color: #f6f7f8 !important;">
                    <li class="breadcrumb-item"><i class="fa fa-home">&nbsp;</i><a href="#">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Purchase</li>
                </ol>
            </nav>
            <h4 style="padding-left: 15px;">Purchase</h4>
        </div>
        <div class="col-md-4">
            <button style="margin-top:25px; float:right;" type="button" class="btn btn-success btn-sm" v-on:click="openModalForAddPurchase()">Add Purchase</button>
        </div>
    </div>
    <div style="margin-top:20px;">
        <div class="alert alert-success alert-dismissible fade show" role="alert" v-cloak v-bind:class="{hide:!alertMessage}" style="margin-top: 20px;">
            {{alertMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div v-cloak class="alert alert-danger alert-dismissible fade show" role="alert" v-bind:class="{hide:!alertFailureMessage}" style="margin-top: 20px;">
            {{alertFailureMessage}}
            <button type="button" class="close" v-on:click="closeAlertMessage('alertFailureMessage')" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div class="card">
            <div class="card-body" style="font-size:14px;">
                <table id="product-table"
                       class="table text-secondary" style="font-size:14px;">
                    <thead class="thead-light">
                    <tr>
                        <th>Date <small>(DD-MM-YYYY)</small></th>
                        <th>Invoice</th>
                        <th>Business</th>
                        <th>SGST</th>
                        <th>CGST</th>
                        <th>Amount</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>

        <!-- The Modal -->
        <div class="modal" id="edit-purchase-modal">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Modal Heading</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Date</label>
                                <div class="col-sm-10">
                                        <input type="text" class="form-control purchase-edit-date">
                                       <pre style="display:inline">{{purchase.Date}}</pre>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Invoice</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.Invoice" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Business</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.BusinessName" type="text" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">SGST</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.SGST" type="number" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">CGST</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.CGST" type="number" class="form-control">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Amount</label>
                                <div class="col-sm-10">
                                    <input v-model="purchase.Amount" type="number" class="form-control">
                                </div>
                            </div>
                        </form>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success btn-sm" data-dismiss="modal" v-on:click="saveEditPurchase()">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal" id="add-purchase">
            <div class="modal-dialog modal-dialog-centered modal-xl">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Add Purchase</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body" style="padding-top: 0px;">


                        <table class="table text-secondary" style="font-size: 14px;">
                            <thead class="thead-light table-head">
                                <tr class="table-row">
                                    <th style="width: 45px" scope="col">#</th>
                                    <th scope="col">Date</th>
                                    <th scope="col">Invoice</th>
                                    <th style="width: 200px;">Name</th>
                                    <th scope="col">CGST</th>
                                    <th scope="col">SGST</th>
                                    <th scope="col">Amount</th>

                                </tr>
                            </thead>
                            <tbody class="table-body">
                                <tr class="table-row" v-for="(purchase,index) in newPurchases">
                                    <td style="width: 45px">{{index+1}}</td>
                                    <td  v-bind:["data-id"]="index"> <input type="text" v-model="purchase.Date" class="form-control form-control-sm purchase-date"></td>
                                    <td> <input type="text" v-model="purchase.Invoice"  class="form-control form-control-sm"></td>
                                    <td style="width: 200px;"> <input type="text" v-model="purchase.BusinessName"  class="form-control form-control-sm"></td>
                                    <td> <input type="number"  v-model="purchase.CGST" class="form-control form-control-sm"></td>
                                    <td> <input type="number"  v-model="purchase.SGST" class="form-control form-control-sm"></td>
                                    <td> <input type="number"  v-model="purchase.Amount" class="form-control form-control-sm"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success" data-dismiss="modal" v-on:click="saveNewPurchase()">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        function addEmptyPurchaseObject() {
            var tempPurchase = [];
            for (var i = 0; i < 30; i++) {
                tempPurchase.push({
                    BusinessName: "",
                    Amount: "",
                    CGST: "",
                    SGST: "",
                    Date: "",
                    Invoice: ""
                });
            }
            return tempPurchase;
        }

        var obj = {
            purchases: [],
            purchase: {},
            alertFailureMessage: "",
            alertMessage: "",
            newPurchases: addEmptyPurchaseObject(),
            tableRef:null
        }

        new Vue({
            el: '#app',
            data: obj,
            methods: {
                deleteItem: function (id) {
                    var self = this;
                    self.isSpinner = true
                    $.get("/purchase/Remove?id=" + id,
                        function() {
                            self.alertMessage = "purchase deleted succesfully";
                            // self.initialLoad();
                        }).fail(function() {
                        self.alertFailureMessage = "Internal server error";
                    });
                },
                openModalForAddPurchase: function () {
                    $("#add-purchase").modal("show");
                },
                saveNewPurchase: function () {
                    var self = this;
                    var validData = [];
                    self.newPurchases.forEach((data) => {
                        if (data.Date && data.Invoice && data.BusinessName && data.CGST && data.SGST && data.Amount) {
                            validData.push(data);
                        }
                    })

                    if (validData.length) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Add", "purchase")',
                            data: JSON.stringify(validData),
                            dataType: 'json',
                            contentType: 'application/json; charset=utf-8',
                            success: function () {
                                self.alertMessage = `${validData.length} purchase Added succesfully. ${30 - validData.length} Purchase were left empty`;
                                self.newPurchases = addEmptyPurchaseObject();
                            }
                        });
                    }
                    else {
                        self.alertFailureMessage = `30 off 30 invalid Purchase record were found`;
                    }
                },
                saveEditPurchase: function() {
                    var self = this;
                    if (self.purchase) {
                        $.post("/purchase/Edit", self.purchase, function( data ) {
                            self.alertMessage = "purchase Edited succesfully";
                        }).fail(function() {
                            self.alertFailureMessage = "Internal server error";
                        });
                    }
                },
                getPurchaseById: function(id) {
                    var self = this;
                    $.get(`/purchase/GetDataById/${id}`,
                        function(data, status) {
                            self.purchase = data;
                            $("#edit-purchase-modal").modal("show");
                        }).fail(function() {
                        self.alertFailureMessage = "Internal server error";
                    });
                },
                bindTableClickEvents: function () {
                    var self = this;
                    $(".edit-purchase").click(function(e) {
                        var id = $(this).attr("data-id")
                        self.getPurchaseById(id);
                    });

                    $(".delete-purchase").click(function(e) {
                        var id = $(this).attr("data-id")
                        self.deleteItem(id);
                    });

                },
                closeAlertMessage: function (property) {
                    // set alert message to empty
                    this[property] = "";
                },
                getTableData: function () {
                    var self = this;
                    self.tableRef = $("#product-table").DataTable({
                        ajax: {
                            url: "/purchase/GetData",
                            type: "GET",
                            dataSrc: function (json) {
                                return json;
                            },
                            error: function (xhr, error) {
                                if (xhr.status === 401) alert("Unauthorised user");
                            }
                        },
                        fixedHeader: {
                            header: true,
                            footer: true
                        },
                        columns: [
                            { data: "Date" },
                            { data: "Invoice" },
                            { data: "BusinessName" },
                            { data: "SGST" },
                            { data: "CGST" },
                            { data: "Amount" },
                            {
                                render: function (data, type, row, meta) {
                                    return `<i class="fa fa-edit pointer edit-purchase" data-id=${row.Id}></i>`;

                                }
                            },
                            {
                                render: function (data, type, row, meta) {
                                    return `<i class="fa fa-trash pointer delete-purchase" data-id=${row.Id}></i>`;
                                }
                            },
                        ],
                        lengthMenu: [[5, 20, 25, 30, 100], [5, 20, 25, 30, 100]],
                        initComplete: function (settings, json) {
                            self.bindTableClickEvents();
                        }
                    });
                },
                getFormatedDate: function (value) {
                    var tempDate = value.split("-");
                    return `${tempDate[2]}-${tempDate[1]}-${tempDate[0]}`;   // DD-MM-YYYY
                }
            },
            mounted() {
                var self = this;
                this.getTableData();
                $('.purchase-edit-date').datetextentry({
                    field_order: 'DMY',
                    on_change: function (date_str) {
                        if (date_str) {
                            self.purchase.Date = self.getFormatedDate(date_str);
                        }
                    }
                });
                $('.purchase-date').datetextentry({
                    field_order: 'DMY',
                    on_change: function (date_str) {
                        if (date_str) {
                            var id = parseInt($(this)[0].$element.parent().parent().attr("data-id"));
                            self.newPurchases[id].Date = self.getFormatedDate(date_str);;
                        }
                    }
                });
            },
        })
    });


</script>
